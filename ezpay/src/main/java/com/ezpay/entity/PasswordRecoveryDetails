package com.EzPayApplication.entity;

import jakarta.persistence.*;
import java.time.LocalDateTime;

@Entity
public class PasswordRecoveryDetails {
	 @Id
	    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "password_recovery_seq")
	    @SequenceGenerator(name = "password_recovery_seq", sequenceName = "password_recovery_seq", allocationSize = 1)
    private Long recoveryId;

    @OneToOne
    @JoinColumn(name = "customer_id")
    private Customer customer;

    private String token;
    private LocalDateTime tokenCreationDate;
    private LocalDateTime tokenExpirationDate;
    private Boolean isTokenUsed;
    
    public boolean isResetTokenExpired() {
        return tokenExpirationDate != null && tokenExpirationDate.isBefore(LocalDateTime.now());
    }

    // Getters and Setters
    public Long getRecoveryId() {
        return recoveryId;
    }

    public void setRecoveryId(Long recoveryId) {
        this.recoveryId = recoveryId;
    }

    public Customer getCustomer() {
        return customer;
    }

    public void setCustomer(Customer customer) {
        this.customer = customer;
    }

    public String getToken() {
        return token;
    }

    public void setToken(String token) {
        this.token = token;
    }

    public LocalDateTime getTokenCreationDate() {
        return tokenCreationDate;
    }

    public void setTokenCreationDate(LocalDateTime tokenCreationDate) {
        this.tokenCreationDate = tokenCreationDate;
    }

    public LocalDateTime getTokenExpirationDate() {
        return tokenExpirationDate;
    }

    public void setTokenExpirationDate(LocalDateTime tokenExpirationDate) {
        this.tokenExpirationDate = tokenExpirationDate;
    }

    public Boolean getIsTokenUsed() {
        return isTokenUsed;
    }

    public void setIsTokenUsed(Boolean isTokenUsed) {
        this.isTokenUsed = isTokenUsed;
    }

	
}
